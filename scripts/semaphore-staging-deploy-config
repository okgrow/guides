#########################
# Deploy HEROKU Backend #
#########################
# install stuff
curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
unzip awscli-bundle.zip
./awscli-bundle/install -b ~/bin/aws
wget -qO- https://toolbelt.heroku.com/install.sh | sh
# Copy production mongo data to staging
heroku maintenance:on

## Install mongo 3.4 client so that we can connect to mongo 3.4 server
## Note: You should use the same client as your Mongo Server, currently Meteor defaults to 3.4, soon it will 3.6
wget https://repo.mongodb.org/apt/ubuntu/dists/trusty/mongodb-org/3.4/multiverse/binary-amd64/mongodb-org-tools_3.4.10_amd64.deb
wget https://repo.mongodb.org/apt/ubuntu/dists/trusty/mongodb-org/3.4/multiverse/binary-amd64/mongodb-org-shell_3.4.10_amd64.deb
sudo dpkg -i ./mongodb-org-tools_3.4.10_amd64.deb
sudo dpkg -i ./mongodb-org-shell_3.4.10_amd64.deb

# Dump production db:
mongodump --host $PRODUCTION_DB_HOST --db $PRODUCTION_DB_NAME --ssl --username $PRODUCTION_DB_USERNAME --password $PRODUCTION_DB_PASSWORD --authenticationDatabase admin --db $PRODUCTION_DB_NAME --verbose --out mongo_dump

# Drop & Restore data (collections) to staging db:
mongorestore --host $STAGING_DB_HOST --db $STAGING_DB_NAME --username $STAGING_DB_USERNAME --password $STAGING_DB_PASSWORD --ssl --authenticationDatabase admin --drop --verbose mongo_dump/*

# Copy production S3 data to staging
~/bin/aws s3 sync --delete --size-only s3://$APPNAME-app-production s3://$APPNAME-app-staging
heroku maintenance:off
# Deploy
git push --force heroku $BRANCH_NAME:master
################
# EXPO Publish #
################
# configure watched file limit
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
# install required toolset
npm install -g exp
# login to expo with correct credentials
exp logout
exp login -u $EXPO_STAGING_USERNAME -p $EXPO_STAGING_PASSWORD
exp whoami
cd mobile
mv app-staging.json app.json
cat app.json
npm install --global sentry-cli-binary
npm install
npm --version
node --version
exp --version
exp publish -s $EXPO_STAGING_EMAIL
# df -h
